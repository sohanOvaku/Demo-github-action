name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - main

on:
  workflow_run:
    workflows: ["Create Release"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get Release Assets
        run: |

          REPO_NAME=$(basename ${{ github.repository }})
          LATEST_RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          
          # Extract release tag name
          TAG_NAME=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
          echo "Latest release tag is: $TAG_NAME"
          echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
          echo "Latest release tag is: $RELEASE_TAG"

      - name: Show release tag
        run: |
          # Now, in the next step, the RELEASE_TAG will be available
          echo "Latest release tag is: $RELEASE_TAG"


      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t docker.io/sohanovaku/demo-github-action:latest -t docker.io/sohanovaku/demo-github-action:$RELEASE_TAG .
          docker push docker.io/sohanovaku/demo-github-action:latest
          docker push docker.io/sohanovaku/demo-github-action:$RELEASE_TAG
          docker save demo-github-action:$RELEASE_TAG | gzip > demo-github-action-$RELEASE_TAG.tar.gz

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Uplaod Docker Image to S3
        run: |
          IMG="sohanovaku/demo-github-action"
          # RELEASE_TAG="${{ steps.release-tag-trim.outputs.release-tag }}" //not need for my script
          aws s3 cp ${IMG}_${RELEASE_TAG}.tar "s3://${{ secrets.S3_BUCKET_NAME }}/releases/${IMG}_${RELEASE_TAG}.tar"

      - name: Purge previous message from SQS
        run: |
          aws sqs purge-queue --queue-url  ${{ secrets.SQS_QUEUE_URL }}

      - name:
        run: sleep 61

      - name: Send SQS Notification
        run: |
          IMG="sohanovaku/demo-github-action"
          # RELEASE_TAG="${{env.RELEASE_TAG}}" //not need for my script
          MESSAGE_BODY='{"file": "'$IMG'_'env.RELEASE_TAG'.tar", "tag": "'$RELEASE_TAG'", "status": "uploaded"}'
          aws sqs send-message \
            --queue-url ${{ secrets.SQS_QUEUE_URL }} \
            --message-body "$MESSAGE_BODY" \
            --message-group-id "release_update"